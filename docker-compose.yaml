version: '3.5'
#Docker Networks
networks:
  laravel:
    driver: bridge

services:

  nginx:
    build:
      context: ./contacts_microservice
      dockerfile: ./compose/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8080:80"
      # Port for xdebug (ensure this matches the remote_port in the xdebug.ini)
      - "9001:9001"
    volumes:
      - ./contacts_microservice/source:/var/www/html:delegated
    depends_on:
      - postgres
      - accounts_app
      - user_app
      - php
      - mysql
    networks:
      - laravel
    
  php:
    build:
      context: ./contacts_microservice
      dockerfile: ./compose/php/Dockerfile
    container_name: php
    volumes:
      - ./contacts_microservice/source:/var/www/html:delegated
      # Enable xdebug
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: ./contacts_microservice
      dockerfile: ./compose/php/composer/Dockerfile
    container_name: composer
    volumes:
      - ./contacts_microservice/source:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    image: node:latest
    container_name: npm
    volumes:
      - ./contacts_microservice/source:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
  
  artisan:
    build:
      context: ./contacts_microservice
      dockerfile: ./compose/php/Dockerfile
    container_name: artisan
    volumes:
      - ./contacts_microservice/source:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  db:
    image:  mongo
    container_name: mongodb
    hostname: mongodb
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    networks:
      - laravel

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
    container_name: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - laravel

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    hostname: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME} 
      MYSQL_PASSWORD: ${DB_PASSWORD} 
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  redis:
    image: "redis:alpine"
    container_name: redis
    hostname: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  user_app:
    build:
      context: ./user_microservice
      dockerfile: Dockerfile
    container_name: user-ms-container
    environment:
      - PORT=${USER_MS_PORT}
    ports:
      - "3001:3001"
    depends_on:
      - db
      - redis
    networks:
      - laravel
    # volumes:
    #   - ./user_microservice/src:/app/src
  
  accounts_app:
    build:
      context: ./accounts_microservice
      dockerfile: Dockerfile
    container_name: accounts-ms-container
    command: npm run start:prod
    ports:
      - "3002:3002"
    links: 
      - mysql
    depends_on:
      - mysql
      - redis
    networks:
      - laravel
    

volumes:
  mongodata:
  pgdata: 